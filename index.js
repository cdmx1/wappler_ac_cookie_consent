import "https://cdn.jsdelivr.net/gh/orestbida/cookieconsent@3.0.1/dist/cookieconsent.umd.js"; dmx.Component("cdmx-cookie-consent", { attributes: { autoShow: { type: Boolean, default: !0 }, noAutoClearCookies: { type: Boolean, default: !1 }, revision: { type: Number, default: 0 }, disablePageInteraction: { type: Boolean, default: !1 }, language: { type: Object, default: { default: "en", translations: { en: "/js/cdmx-cookie-consent/locale/en.json" } } }, guiOptions: { type: Object, default: {} }, categories: { type: Object, default: {} } }, init() { console.log("Cookie Consent component initialized"); let e = { language: { default: this.props.language.default, translations: { en: async () => { let e = await fetch(this.props.language.translations[this.props.language.default]); return await e.json() } } }, categories: this.props.categories, guiOptions: this.props.guiOptions, disablePageInteraction: this.props.disablePageInteraction, autoShow: this.props.autoShow, noAutoClearCookies: this.props.noAutoClearCookies, revision: this.props.revision }; console.log(e), CookieConsent.run(e) }, methods: { run(e) { CookieConsent.run(e) }, showConsent() { CookieConsent.show() }, hideConsent() { CookieConsent.hide() }, showPreferences() { CookieConsent.showPreferences() }, hidePreferences() { CookieConsent.hidePreferences() }, acceptCategory(e, t) { CookieConsent.acceptCategory(e, t) }, eraseCookies(e, t, o) { CookieConsent.eraseCookies(e, t, o) }, loadScript: (e, t) => CookieConsent.loadScript(e, t), setLanguage(e, t) { CookieConsent.setLanguage(e, t) }, setCookieData(e, t) { CookieConsent.setCookieData(e, t) }, reset(e) { CookieConsent.reset(e) } }, requestUpdate(e, t) { "language" === e && this.setLanguage(this.props.language) }, performUpdate(e) { e.forEach((e, t) => { "language" === t && this.setLanguage(this.props.language) }) }, destroy() { console.log("Cookie Consent component destroyed") } });
